{"version":3,"sources":["components/FormInput/FormInput.js","components/fireBase/FireBasenItialization.js","components/pages/LogInPage.js","components/ToDoList/ItemTask/CreatingEditingPage.js","components/pages/RagisttrationPage.js","components/calendar/day/Day.js","components/ToDoList/ToDoList.js","components/calendar/Calendar.js","components/pages/TasksPage.js","components/Routing/ModalSwich/ModalSwich.js","App.js","reportWebVitals.js","index.js"],"names":["FormInput","label","type","name","placeholder","value","handleChange","thereIsALabel","ifTypeRadio","radioID","word","answer","converter","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ь","ы","ъ","э","ю","я","А","Б","В","Г","Д","Е","Ё","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ь","Ы","Ъ","Э","Ю","Я","i","length","undefined","translit","className","htmlFor","id","onChange","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","database","getFirestore","LogIn","useState","error","setError","email","setEmail","password","setPassword","useEffect","alert","target","onClick","signInWithEmailAndPassword","then","responce","catch","err","logIn","to","CreatingEditingPage","user","history","useHistory","useParams","dateTask","setDateTask","nameTask","setNameTask","textTask","setTextTask","e","stopPropagation","goBack","docRef","addDoc","collection","push","console","Redistration","createUserWithEmailAndPassword","Day","day","date","month","year","handleDate","Date","ToDoList","allTodayTasks","log","tasks","setTasks","map","task","Calendar","allTasks","tasksAtThisDay","setTasksAtThisDay","today","getFullYear","getMonth","getDate","filter","daysInMonth","daysName","days","Array","fill","getDay","TasksPage","dataOutDatabadse","setDataOutDatabase","alovelaceDocumentRef","getDocs","x","forEach","doc","data","signOut","ModalSwitch","status","setStatus","onAuthStateChanged","uid","path","exact","children","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7195fd0b.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport './FormInput.scss';\n\nexport default function FormInput({ label, type, name, placeholder, value, handleChange }) {\n    function translit(word) {\n        let answer = '';\n        const converter = {\n            а: 'a',\n            б: 'b',\n            в: 'v',\n            г: 'g',\n            д: 'd',\n            е: 'e',\n            ё: 'e',\n            ж: 'zh',\n            з: 'z',\n            и: 'i',\n            й: 'y',\n            к: 'k',\n            л: 'l',\n            м: 'm',\n            н: 'n',\n            о: 'o',\n            п: 'p',\n            р: 'r',\n            с: 's',\n            т: 't',\n            у: 'u',\n            ф: 'f',\n            х: 'h',\n            ц: 'c',\n            ч: 'ch',\n            ш: 'sh',\n            щ: 'sch',\n            ь: '',\n            ы: 'y',\n            ъ: '',\n            э: 'e',\n            ю: 'yu',\n            я: 'ya',\n\n            А: 'A',\n            Б: 'B',\n            В: 'V',\n            Г: 'G',\n            Д: 'D',\n            Е: 'E',\n            Ё: 'E',\n            Ж: 'Zh',\n            З: 'Z',\n            И: 'I',\n            Й: 'Y',\n            К: 'K',\n            Л: 'L',\n            М: 'M',\n            Н: 'N',\n            О: 'O',\n            П: 'P',\n            Р: 'R',\n            С: 'S',\n            Т: 'T',\n            У: 'U',\n            Ф: 'F',\n            Х: 'H',\n            Ц: 'C',\n            Ч: 'Ch',\n            Ш: 'Sh',\n            Щ: 'Sch',\n            Ь: '',\n            Ы: 'Y',\n            Ъ: '',\n            Э: 'E',\n            Ю: 'Yu',\n            Я: 'Ya',\n        };\n\n        for (let i = 0; i < word.length; ++i) {\n            if (converter[word[i]] === undefined) {\n                answer += word[i];\n            } else {\n                answer += converter[word[i]];\n            }\n        }\n\n        return answer;\n    }\n\n    const thereIsALabel = label ? 'input_with_label' : 'input_with_out_label';\n    const ifTypeRadio = type === 'radio' ? 'label_with_radio' : 'label_with_out_radio';\n    const radioID = type === 'radio' ? `${name}_${translit(value)}` : name;\n\n    return (\n        <div className=\"block_input\">\n            {label ? (\n                <label htmlFor={radioID} className={ifTypeRadio}>\n                    {label}\n                </label>\n            ) : null}\n            <input\n                className={thereIsALabel}\n                type={type}\n                name={name}\n                placeholder={placeholder}\n                id={radioID}\n                value={value}\n                onChange={handleChange}\n            />\n        </div>\n    );\n}\n","/* eslint-disable no-undef */\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\n// import { getDatabase } from 'firebase/database';\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_IS,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\n// export const database = getDatabase(app);\nexport const database = getFirestore(app);\n","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport FormInput from '../FormInput/FormInput';\nimport { auth } from '../fireBase/FireBasenItialization';\nimport { signInWithEmailAndPassword } from '@firebase/auth';\nimport './LogInPage.scss';\nimport { useEffect } from 'react/cjs/react.development';\n\nexport default function LogIn() {\n    const [error, setError] = useState();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n\n    const handleEmail = ({ target: { value } }) => {\n        setEmail(value);\n    };\n\n    const handlePassword = ({ target: { value } }) => {\n        setPassword(value);\n    };\n\n    const logIn = (auth, email, password) => {\n        signInWithEmailAndPassword(auth, email, password)\n            .then(responce => responce)\n            .catch(err => {\n                setError(err);\n            });\n    };\n\n    useEffect(() => {\n        if (error) {\n            alert(error);\n        }\n    }, [error]);\n\n    return (\n        <div className=\"login_container\">\n            <h2>Log In</h2>\n            <FormInput label=\"Your Email\" type=\"email\" handleChange={handleEmail} />\n            <FormInput label=\"Password\" type=\"password\" handleChange={handlePassword} />\n            <button\n                onClick={() => {\n                    logIn(auth, email, password);\n                }}\n            >\n                Sing In\n            </button>\n            {/* <button type='button'>Log in whith Google</button> */}\n            <NavLink to=\"/register\">Registration</NavLink>\n        </div>\n    );\n}\n","import { useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport FormInput from '../../FormInput/FormInput';\nimport { collection, addDoc } from \"firebase/firestore\"; \nimport { database } from '../../fireBase/FireBasenItialization';\nimport './CreatingEditingPage.scss';\nimport '../ToDoList.scss';\n\nexport default function CreatingEditingPage(user) {\n    const history = useHistory();\n    const { id } = useParams();\n    const [dateTask, setDateTask] = useState();\n    const [nameTask, setNameTask] = useState();\n    const [textTask, setTextTask] = useState();\n\n    const handleDate = ({ target: { value } }) => {\n        setDateTask(value);\n    };\n\n    const handleNameTask = ({ target: { value } }) => {\n        setNameTask(value);\n    };\n\n    const handleTextTask = ({ target: { value } }) => {\n        setTextTask(value);\n    };\n\n    const back = e => {\n        e.stopPropagation();\n        history.goBack();\n    };\n\n    function writeUserData() {\n        try {\n            const docRef = addDoc(collection(database, user.user), {\n                dateTask: dateTask,\n                nameTask: nameTask,\n                textTask: textTask\n            });\n            alert(\"Document written with ID: \", docRef.id);\n            history.push('/');\n        } catch (e) {\n            console.error(\"Error adding document: \", e);\n        }\n    }\n\n    return (\n        <div className=\"task_page-container\">\n            <button className=\"button_back\" type=\"button\" onClick={back}>\n                Back Tasker\n            </button>\n            {id === 'add' ? (\n                <div className=\"container\">\n                    <div>\n                        <FormInput label=\"Date\" type=\"date\" handleChange={handleDate} />\n                        <FormInput label=\"Name Task\" type=\"text\" handleChange={handleNameTask} />\n                        <textarea onChange={handleTextTask}></textarea>\n                    </div>\n                    <button className=\"button_add-edit\" onClick={writeUserData}>\n                        Add\n                    </button>\n                </div>\n            ) : (\n                <div className=\"container\">\n                    <div>\n                        <input className=\"checkbox-label\" id={id} type=\"checkbox\" />\n                        <label htmlFor={id}></label>\n                        <span className=\"item-name\">Name</span>\n                    </div>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin vitae arcu\n                        sed est eleifend mollis. Nulla tristique vulputate tincidunt. Quisque id\n                        libero sit amet lectus mollis scelerisque. Interdum et malesuada fames ac\n                        ante ipsum primis in faucibus. Mauris auctor orci eu dui porta, eget\n                        ullamcorper nulla consectetur. Quisque dapibus tristique orci, eu pretium\n                        dolor aliquam ut. Class aptent taciti sociosqu ad litora torquent per\n                        conubia nostra, per inceptos himenaeos. Fusce in leo purus. Fusce a faucibus\n                        odio.\n                    </p>\n                    <button className=\"button_add-edit\">Edit</button>\n                </div>\n            )}\n        </div>\n    );\n}\n","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { auth } from '../fireBase/FireBasenItialization';\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\nimport FormInput from '../FormInput/FormInput';\n\nexport default function Redistration() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n\n    const handleEmail = ({ target: { value } }) => {\n        setEmail(value);\n    };\n\n    const handlePassword = ({ target: { value } }) => {\n        setPassword(value);\n    };\n\n    const createAccount = () => {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then(responce => responce)\n            .catch(err => err);\n    };\n\n    return (\n        <>\n            {/* <FormInput label='Your Name' type='text' /> */}\n            <FormInput label=\"Your Email\" type=\"email\" handleChange={handleEmail} />\n            <FormInput label=\"Password\" type=\"password\" handleChange={handlePassword} />\n            <FormInput label=\"Repeat password\" type=\"password\" />\n            <button onClick={createAccount}>Register</button>\n            <NavLink to=\"/\">Log In</NavLink>\n        </>\n    );\n}\n","/* eslint-disable react/prop-types */\nimport './Day.scss';\n\nexport default function Day({ day, date, month, year, handleDate }) {\n    return (\n        <>\n            <div className=\"day\" value={new Date(year, month, date)} onClick={handleDate}>\n                <div>{year}</div>\n                <div>{month}</div>\n                <div>{day}</div>\n                <div>{date}</div>\n            </div>\n        </>\n    );\n}\n","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './ToDoList.scss';\n\nexport default function ToDoList(allTodayTasks) {\n\n    console.log(allTodayTasks);\n    const [tasks, setTasks] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        setTasks([\n            { id: 'hkhjhkj', name: 'First Task' },\n            { id: 'dlsgfvsdkj', name: 'Second Task' },\n        ]);\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div>\n                <h2>Today Tasks</h2>\n            </div>\n            {tasks.length === 0\n                ? 'You don`t have tasks today!'\n                : tasks.map(task => (\n                    <>\n                        <div>\n                            <input\n                                className=\"checkbox-label\"\n                                type=\"checkbox\"\n                                id={`check_${task.name}`}\n                            />\n                            <label htmlFor={`check_${task.name}`}></label>\n                            <span\n                                className=\"item_name\"\n                                onClick={() => {\n                                    history.push(`/item_task${task.id}`);\n                                }}\n                            >\n                                {task.name}\n                            </span>\n                        </div>\n                    </>\n                ))}\n            <button\n                id=\"add_task\"\n                onClick={() => {\n                    history.push('/item_taskadd');\n                }}\n            >\n                + Add Task\n            </button>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\r\nimport { useState } from \"react\";\r\nimport Day from \"./day/Day\";\r\nimport ToDoList from '../ToDoList/ToDoList';\r\nimport './Calendar.scss';\r\nimport { useEffect } from \"react/cjs/react.development\";\r\n\r\nexport default function Calendar ({allTasks}) {\r\n\r\n    const [tasksAtThisDay, setTasksAtThisDay] = useState([]);\r\n    const today = new Date();\r\n    console.log(new Date(allTasks[0][1].dateTask), new Date(`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`));\r\n\r\n    useEffect(() => {\r\n        setTasksAtThisDay(allTasks.filter(task => {\r\n            if(new Date(task[1].dateTask) === new Date(`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`)) {\r\n                return task;\r\n            }\r\n        }));\r\n        console.log(tasksAtThisDay);\r\n    }, []);\r\n    \r\n\r\n    // const today = new Date();\r\n    const daysInMonth = 32 - new Date(today.getFullYear(), today.getMonth(), 32).getDate();\r\n    const daysName = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\n    let day = today.getDate();\r\n    let month = today.getMonth();\r\n    let year = today.getFullYear();\r\n    const days = new Array(daysInMonth).fill(null);\r\n\r\n    for (let i = 0; i <= 30; i++) {\r\n        day === daysInMonth + 1 ? day = 1 : day;\r\n        day === 1 ? month += 1 : month;\r\n        month === 12 ? month = 0 : month;\r\n        month === 0 ? year += 1 : year;\r\n        days[i] = [daysName[new Date(year, month, day).getDay()], day, month + 1, year];\r\n        day++;\r\n    }\r\n\r\n    const handleDate = ({target: {value}}) => {\r\n        console.log(value);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className='calendar'>\r\n                {days.map(day => (\r\n                    <Day key={`${day[0]}_${day[1]}_${day[2]}`} day={day[0]} date={day[1]} month={day[2]} year={day[3]} handleDate={handleDate} />\r\n                ))}\r\n            </div>\r\n            <ToDoList allTodayTasks={tasksAtThisDay} />\r\n        </>\r\n    );\r\n}","/* eslint-disable react/prop-types */\n/* eslint-disable no-undef */\nimport { useState } from 'react';\nimport Calendar from '../calendar/Calendar';\nimport { auth, database } from '../fireBase/FireBasenItialization';\nimport { signOut } from '@firebase/auth';\nimport { collection, getDocs } from \"firebase/firestore\"; \nimport './TasksPage.scss';\nimport { useEffect } from 'react/cjs/react.development';\n\nexport default function TasksPage(user) {\n\n    const [dataOutDatabadse, setDataOutDatabase] = useState([]);\n    console.log(dataOutDatabadse);\n\n    const logOut = auth => {\n        signOut(auth);\n    };\n\n    useEffect(() => {\n        const alovelaceDocumentRef = collection(database, user.user);\n        getDocs(alovelaceDocumentRef)\n            .then(responce => {\n                const x = [];\n                responce.forEach(doc => x.push([doc.id, doc.data()]));\n                return x;\n            })\n            .then(responce => setDataOutDatabase(responce));\n    }, []);\n    \n\n    return (\n        <div className=\"task_page-container\">\n            <h1>Tasker</h1>\n            <button\n                onClick={() => {\n                    logOut(auth);\n                }}\n            >\n                Sign Out\n            </button>\n            <Calendar allTasks={dataOutDatabadse} />\n        </div>\n    );\n}\n","/* eslint-disable react/no-children-prop */\nimport LogIn from '../../pages/LogInPage';\nimport CreatingEditingPage from '../../ToDoList/ItemTask/CreatingEditingPage';\nimport Redistration from '../../pages/RagisttrationPage';\nimport { Switch, Route } from 'react-router-dom';\nimport { useState } from 'react';\nimport { onAuthStateChanged } from '@firebase/auth';\nimport { auth } from '../../fireBase/FireBasenItialization';\nimport TasksPage from '../../pages/TasksPage';\n\nexport default function ModalSwitch() {\n    const [status, setStatus] = useState();\n\n    onAuthStateChanged(auth, user => {\n        user ? setStatus(user.uid) : setStatus(null);\n    });\n\n    return (\n        <div>\n            <Switch>\n                {!status ? (\n                    <>\n                        <Route path=\"/\" exact children={<LogIn />} />\n                        <Route path=\"/register\" children={<Redistration />} />\n                    </>\n                ) : (\n                    <>\n                        <Route path=\"/\" exact children={<TasksPage user={status} />} />\n                        <Route\n                            path=\"/item_task:id\"\n                            children={<CreatingEditingPage user={status} />}\n                        />\n                    </>\n                )}\n            </Switch>\n        </div>\n    );\n}\n","import { BrowserRouter as Router } from 'react-router-dom';\nimport ModalSwitch from './components/Routing/ModalSwich/ModalSwich';\nimport './App.scss';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <ModalSwitch />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}